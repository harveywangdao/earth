一、部署
单节点
docker run --rm -p 9000:9000 \
  --name minio1 \
  -e "MINIO_ROOT_USER=miniothomas" \
  -e "MINIO_ROOT_PASSWORD=miniothomas123" \
  minio/minio server /data

wget https://dl.min.io/server/minio/release/linux-amd64/minio
chmod +x minio
MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 ./data

http://192.168.197.129:9000

单节点纠删码
MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 ./data{1...8}
2/3drives 失败
4drives 成功  1st pool, 1 set(s), 4 drives per set
5drives 成功  1st pool, 1 set(s), 5 drives per set
6drives 成功  1st pool, 1 set(s), 6 drives per set
8drives 成功  1st pool, 1 set(s), 8 drives per set  损坏四个能全部恢复
10drives 成功 1st pool, 1 set(s), 10 drives per set 损坏五个只能恢复bucket不能恢复object
Host local has more than 4 drives of set. A host failure will result in data becoming unavailable
12drives 成功 1st pool, 1 set(s), 12 drives per set 损坏五个只能恢复bucket不能恢复object
14drives 成功 1st pool, 1 set(s), 14 drives per set 损坏五个只能恢复bucket不能恢复object
16drives 成功 1st pool, 1 set(s), 16 drives per set 损坏五个只能恢复bucket不能恢复object


17/19/23/29/31   失败
18   1st pool, 2 set(s), 9 drives per set
21   1st pool, 3 set(s), 7 drives per set
22   1st pool, 2 set(s), 11 drives per set
24   1st pool, 2 set(s), 12 drives per set
25   1st pool, 5 set(s), 5 drives per set
32   1st pool, 2 set(s), 16 drives per set
1000 1st pool, 100 set(s), 10 drives per set

一个set中的drives损坏过半数据无法恢复
两个set其中一个set全损坏,旧的bucket无法恢复，但可以增加新的bucket

rm -rf data*

集群
dd if=/dev/zero of=/home/thomas/data/files/d.txt bs=1M count=10
dd if=/dev/zero of=/home/thomas/data/files/e.txt bs=10M count=10

增加磁盘
sudo fdisk -l
sudo lsblk -a

sudo fdisk /dev/sdb
n
p
1
2048
+10G
w

sudo mkfs.ext4 /dev/sdb1
cd /home/thomas/data
mkdir -p minio1 minio2 minio3 minio4
sudo lsblk -f
sudo vim /etc/fstab
sudo df -hl
sudo reboot

cd /home/thomas/data
sudo chown -R thomas:thomas *
rm -rf minio1/* minio2/* minio3/* minio4/* minio1/.minio.sys minio2/.minio.sys minio3/.minio.sys minio4/.minio.sys

cd ~/server/minio
MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 \
http://192.168.197.128:9000/home/thomas/data/minio{1...4} \
http://192.168.197.129:9000/home/thomas/data/minio{1...4} \
http://192.168.197.130:9000/home/thomas/data/minio{1...4} \
http://192.168.197.131:9000/home/thomas/data/minio{1...4}

MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 \
http://192.168.197.128:9000/home/thomas/server/minio/data1 \
http://192.168.197.129:9000/home/thomas/server/minio/data1 \
http://192.168.197.130:9000/home/thomas/server/minio/data1 \
http://192.168.197.131:9000/home/thomas/server/minio/data1 \
http://192.168.197.128:9000/home/thomas/server/minio/data2 \
http://192.168.197.129:9000/home/thomas/server/minio/data2 \
http://192.168.197.130:9000/home/thomas/server/minio/data2 \
http://192.168.197.131:9000/home/thomas/server/minio/data2 \
http://192.168.197.128:9000/home/thomas/server/minio/data3 \
http://192.168.197.129:9000/home/thomas/server/minio/data3 \
http://192.168.197.130:9000/home/thomas/server/minio/data3 \
http://192.168.197.131:9000/home/thomas/server/minio/data3 \
http://192.168.197.128:9000/home/thomas/server/minio/data4 \
http://192.168.197.129:9000/home/thomas/server/minio/data4 \
http://192.168.197.130:9000/home/thomas/server/minio/data4 \
http://192.168.197.131:9000/home/thomas/server/minio/data4 \
http://192.168.197.128:9000/home/thomas/server/minio/data5 \
http://192.168.197.129:9000/home/thomas/server/minio/data5 \
http://192.168.197.130:9000/home/thomas/server/minio/data5 \
http://192.168.197.131:9000/home/thomas/server/minio/data5 \
http://192.168.197.128:9000/home/thomas/server/minio/data6 \
http://192.168.197.129:9000/home/thomas/server/minio/data6 \
http://192.168.197.130:9000/home/thomas/server/minio/data6 \
http://192.168.197.131:9000/home/thomas/server/minio/data6 \
http://192.168.197.128:9000/home/thomas/server/minio/data7 \
http://192.168.197.129:9000/home/thomas/server/minio/data7 \
http://192.168.197.130:9000/home/thomas/server/minio/data7 \
http://192.168.197.131:9000/home/thomas/server/minio/data7 \
http://192.168.197.128:9000/home/thomas/server/minio/data8 \
http://192.168.197.129:9000/home/thomas/server/minio/data8 \
http://192.168.197.130:9000/home/thomas/server/minio/data8 \
http://192.168.197.131:9000/home/thomas/server/minio/data8

MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 \
http://192.168.197.1{28...31}:9000/home/thomas/server/minio/data{1...4} \
http://192.168.197.1{28...31}:9000/home/thomas/server/minio/data{5...8}

MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 \
http://192.168.197.1{28...31}:9000/home/thomas/server/minio/data{1...8}
这种方式部署四个节点前四个drives是一个set，后四个drives也是一个set，整个集群有2个set，一个节点挂掉，不影响读写

MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 \
http://192.168.197.128:9000/home/thomas/server/minio/data{1...8} \
http://192.168.197.129:9000/home/thomas/server/minio/data{1...8} \
http://192.168.197.130:9000/home/thomas/server/minio/data{1...8} \
http://192.168.197.131:9000/home/thomas/server/minio/data{1...8}
这种方式部署每个节点都是一个set，一个节点挂掉，能读到其中某一个节点的数据，写完全失败

MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 \
http://192.168.197.128:9000/home/thomas/server/minio/data{1...4} \
http://192.168.197.129:9000/home/thomas/server/minio/data{1...4} \
http://192.168.197.130:9000/home/thomas/server/minio/data{1...4} \
http://192.168.197.131:9000/home/thomas/server/minio/data{1...4} \
http://192.168.197.128:9000/home/thomas/server/minio/data{5...8} \
http://192.168.197.129:9000/home/thomas/server/minio/data{5...8} \
http://192.168.197.130:9000/home/thomas/server/minio/data{5...8} \
http://192.168.197.131:9000/home/thomas/server/minio/data{5...8}
这种方式部署一个节点前四个drives是一个set，每个节点有两个set，一共8个set，一个节点挂掉，读只能读某一个节点的数据，写完全失败

MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 \
http://192.168.197.1{28...31}:9000/home/thomas/server/minio/data1
四个节点组成一个set，一个节点挂掉不影响读写；2个drives坏掉数据可以自动恢复；2个节点挂掉数据可读不可写

MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 \
http://192.168.197.1{28...31}:9000/home/thomas/server/minio/data{1...2}
四个节点组成一个set，一个节点挂掉不影响读写；4个drives坏掉数据可以自动恢复；2个节点挂掉数据可读不可写

MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 \
http://192.168.197.1{28...31}:9000/home/thomas/server/minio/data{1...4}
四个节点组成一个set，一个节点挂掉不影响读写；5个drives坏掉文件数据会清零bucket会保存；2个节点挂掉数据不可读不可写

MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 \
http://192.168.197.1{28...31}:9000/home/thomas/server/minio/data{1...2} \
http://192.168.197.1{28...31}:9000/home/thomas/server/minio/data{3...4}
四个节点前2个drives组成一个set，后2个drives组成一个set，整个集群有2个set，一个节点挂掉不影响读写；一个set中的4个drives坏掉数据可以自动恢复；2个节点挂掉数据可读不可写

MINIO_STORAGE_CLASS_STANDARD=EC:8 MINIO_ROOT_USER=miniothomas MINIO_ROOT_PASSWORD=miniothomas123 ./minio server --address :9000 \
http://192.168.126.1{28...31}:9000/home/thomas/server/minio/data{1...4}
四个节点组成一个set，一个节点挂掉不影响读写；8个drives坏掉文件数据可以恢复；2个节点挂掉数据可读不可写


二、客户端
mc --autocompletion

mc alias list
mc alias remove harvey
mc alias set harvey http://192.168.197.128:9000 miniothomas miniothomas123

mc ls harvey
mc mb harvey/bucket02
mc cp a.txt harvey/bucket02
mc ls harvey/bucket02

mc cat harvey/bucket02/a.txt 
mc share download harvey/bucket02/a.txt
mc share upload harvey/bucket02/b.txt
mc find harvey/bucket02 --name "*.txt"
mc stat harvey/bucket02/a.txt
mc rm harvey/bucket02/a.txt
mc du harvey/bucket02/a.txt
mc ilm ls harvey/bucket02
mc ilm add --expiry-days "1" harvey/bucket02
mc watch harvey/bucket02
mc admin info harvey

三、原理
k8s部署
纠删码Reed-Solomon
dsync分布式锁
ACID
CAP

增加节点
删除节点

分布式存储
服务可用性
数据不丢失，数据副本，纠删码
数据一致性，分布式事务，分布式锁，raft
